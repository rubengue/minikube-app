apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"react-app","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"example-chart","app.kubernetes.io/version":"1.0.0","helm.sh/chart":"example-chart-0.2.0"},"name":"react-app-example-chart","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/instance":"react-app","app.kubernetes.io/name":"example-chart"}},"template":{"metadata":{"labels":{"app.kubernetes.io/instance":"react-app","app.kubernetes.io/name":"example-chart"}},"spec":{"containers":[{"image":"anaisurlichs/react-example-app:1.0.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/","port":"http"}},"name":"example-chart","ports":[{"containerPort":80,"name":"http","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/","port":"http"}},"resources":{},"securityContext":{}}],"securityContext":{},"serviceAccountName":"react-app-example-chart"}}}}
  creationTimestamp: "2021-11-26T13:39:22Z"
  generation: 1
  labels:
    app.kubernetes.io/instance: react-app
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: example-chart
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: example-chart-0.2.0
  name: react-app-example-chart
  namespace: default
  resourceVersion: "33400"
  uid: 48d510df-6681-4d80-b354-c8fa56cc63c3
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: react-app
      app.kubernetes.io/name: example-chart
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: react-app
        app.kubernetes.io/name: example-chart
    spec:
      containers:
      - image: anaisurlichs/react-example-app:1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: example-chart
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: react-app-example-chart
      serviceAccountName: react-app-example-chart
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2021-11-26T13:39:24Z"
    lastUpdateTime: "2021-11-26T13:39:24Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2021-11-26T13:39:22Z"
    lastUpdateTime: "2021-11-26T13:39:24Z"
    message: ReplicaSet "react-app-example-chart-9d589cc75" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2